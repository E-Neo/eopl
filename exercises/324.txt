let makeeven = proc (maker)
                 proc (makeodd)
                   proc (x)
                     if zero?(x) then 1
                     else (((makeodd makeodd) maker) -(x, 1))
in let makeodd = proc (maker)
                   proc (makeeven)
                     proc (x)
                       if zero?(x) then 0
                       else (((makeeven makeeven) maker) -(x, 1))
   in let even = proc (x) (((makeeven makeeven) makeodd) x)
      in let odd = proc (x) (((makeodd makeodd) makeeven) x)
         in (odd 13)
